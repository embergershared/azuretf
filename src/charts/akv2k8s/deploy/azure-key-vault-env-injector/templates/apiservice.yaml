{{- $tlsCrt := "" }}
{{- $tlsKey := "" }}
{{- $caCrt := "" }}
{{- if and (not .Values.webhook.certificate.custom.enabled) (not .Values.webhook.certificate.useCertManager) }}
{{- $ca := genCA "svc-cat-ca" 3650 }}
{{- $svcName := include "azure-key-vault-to-kubernetes.fullname" . }}
{{- $cn := printf "%s.%s.svc" $svcName .Release.Namespace }}
{{- $altName1 := printf "%s.cluster.local" $cn }}
{{- $altName2 := printf "%s" $cn }}
{{- $server := genSignedCert $cn nil (list $altName1 $altName2) 730 $ca }}
{{- $tlsCrt = b64enc $server.Cert }}
{{- $tlsKey = b64enc $server.Key }}
{{- $caCrt =  b64enc $ca.Cert }}
{{- else if .Values.webhook.certificate.custom.enabled }}
{{- $tlsCrt = required "Required when webhook.certificate.generate is false" .Values.webhook.certificate.custom.server.tls.crt }}
{{- $tlsKey = required "Required when webhook.certificate.generate is false" .Values.webhook.certificate.custom.server.tls.key }}
{{- $caCrt = required "Required when webhook.certificate.generate is false" .Values.webhook.certificate.custom.ca.crt }}
{{- end }}

{{- if not .Values.webhook.certificate.useCertManager }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "azure-key-vault-to-kubernetes.servingCertificate" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "azure-key-vault-to-kubernetes.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  tls.crt: {{ $tlsCrt }}
  tls.key: {{ $tlsKey }}
  ca.crt:  {{ $caCrt }}
{{- end }}

---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ template "azure-key-vault-to-kubernetes.fullname" . }}
  namespace: {{ .Release.Namespace }}
{{- if .Values.webhook.certificate.useCertManager }}
  annotations:
    cert-manager.io/inject-ca-from: "{{ .Release.Namespace }}/{{ include "azure-key-vault-to-kubernetes.servingCertificate" . }}"
{{- end }}
webhooks:
- name: pods.{{ template "azure-key-vault-to-kubernetes.name" . }}.admission.spv.no
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ template "azure-key-vault-to-kubernetes.fullname" . }}
      path: /pods
    caBundle: {{ $caCrt }}
  rules:
  - operations:
    - CREATE
    apiGroups:
    - "*"
    apiVersions:
    - "*"
    resources:
    - pods
  failurePolicy: {{ .Values.webhook.failurePolicy }}
  namespaceSelector:
    {{- if .Values.webhook.namespaceSelector.matchLabels }}
    matchLabels:
{{ toYaml .Values.webhook.namespaceSelector.matchLabels | indent 6 }}
    {{- end }}
    matchExpressions:
    {{- if .Values.webhook.namespaceSelector.matchExpressions }}
{{ toYaml .Values.webhook.namespaceSelector.matchExpressions | indent 4 }}
    {{- end }}
    - key: name
      operator: NotIn
      values:
      - {{ .Release.Namespace }}