{{- $dot := . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "azure-key-vault-controller.fullname" . }}
  labels:
    app: {{ template "azure-key-vault-controller.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end}}
spec:
  selector:
    matchLabels:
      app: {{ template "azure-key-vault-controller.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "azure-key-vault-controller.name" . }}
        release: {{ .Release.Name }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end}}
    spec:
      serviceAccountName: {{ template "azure-key-vault-controller.serviceAccountName" . }}
      containers:
      - name: azure-keyvault-controller
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: AZURE_VAULT_NORMAL_POLL_INTERVALS
          value: "{{ .Values.keyVault.polling.normalInterval }}"
        - name: AZURE_VAULT_EXCEPTION_POLL_INTERVALS
          value: "{{ .Values.keyVault.polling.failureInterval }}"
        - name: AZURE_VAULT_MAX_FAILURE_ATTEMPTS
          value: "{{ .Values.keyVault.polling.failureAttempts }}"
        - name: CUSTOM_AUTH
          value: {{ .Values.keyVault.customAuth.enabled | quote }}
        - name: LOG_LEVEL
          value: "{{ .Values.logLevel }}"
        - name: LOG_FORMAT
          value: "{{ .Values.logFormat }}"
        {{- range $key, $value := .Values.env }}
        - name: {{ $key }}
          valueFrom:
            secretKeyRef:
              name: {{ template "azure-key-vault-controller.fullname" $dot }}-env
              key: {{ $key }}
        {{- end }}
    {{- if not .Values.keyVault.customAuth.enabled }}
        args:
          - "--cloudconfig={{ .Values.cloudConfig }}"
          # - "--version={{ .Values.image.tag }}"
        volumeMounts:
          - name: azure-config
            mountPath: "{{ .Values.cloudConfig }}"
            readOnly: true
      volumes:
      - name: azure-config
        hostPath:
          path: "{{ .Values.cloudConfig }}"
          type: File
      {{- end }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
      - name: "{{ .Values.image.pullSecret }}"
      {{- end }}
